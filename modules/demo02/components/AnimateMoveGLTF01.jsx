/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/gltf/animateMoveGLTF01.gltf
*/

import { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export function AnimateMoveGLTF01(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('gltf/animateMoveGLTF01.gltf');
  const { actions, names } = useAnimations(animations, group);
  console.log('names', names);

  useEffect(() => {
    actions[names[0]].reset().fadeIn(0.5).play();
    console.log('useAnimations');
    console.table(ref, mixer, names, actions, clips);
    setTimeout(() => {
      actions[names[2]].reset().fadeIn(0.5).play();
    }, 2000);
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          castShadow
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          position={[0.27, 0, 0]}
          rotation={[0.01, 0, 0]}
        />
      </group>
    </group>
  );
}

export default AnimateMoveGLTF01;

useGLTF.preload('gltf/animateMoveGLTF01.gltf');
